package org.radarcns.redcap.enrolment;

/*
 * Copyright 2017 King's College London
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Objects;
import javax.validation.constraints.NotNull;
import org.radarcns.redcap.util.RedCapInput;

/**
 * <p>Defines input parameters for updating RADAR Enrolment Instrument: a REDCap instrument
 * automatically created by REDCap during the enrolment process.</p>
 * <p>The instrument is composed by<ul>
 * <li>{@code record_id}: subject unique identifier within the REDCap project
 * <li>{@code subject_id}: RADAR subject identifier generated by the Management Portal
 * <li>{@code human_readable_id}: human readable identifier useful to visualise data. It
 *      should be the concatenation of<ul>
 *          <li>RADAR-CNS work package</li>
 *          <li>project identifier</li>
 *          <li>site</li>
 *          <li>REDCap record id</li></ul>
 * </ul></p>
 */
public class EnrolmentInput implements RedCapInput {

    @JsonIgnore
    public static final String SUBJECT_ID_LABEL = "subject_id";

    @JsonIgnore
    public static final String HUMAN_READABLE_ID_LABEL = "human_readable_id";

    private final Integer record;

    @JsonProperty("redcap_event_name")
    private final String redcapEventName;

    @JsonProperty("field_name")
    private String fieldName;

    private String value;

    /**
     * Constructor.
     * @param record REDCap record identifier
     * @param event REDCap unique event identifier related to the instrument
     * @param field form field that has to be modified
     * @param value value that has to be written
     */
    public EnrolmentInput(@NotNull Integer record,@NotNull String event,@NotNull String field,
            @NotNull String value) {
        Objects.requireNonNull(record);
        Objects.requireNonNull(event);
        Objects.requireNonNull(field);
        Objects.requireNonNull(value);

        this.record = record;
        this.redcapEventName = event;
        this.fieldName = field;
        this.value = value;
    }

    public Integer getRecord() {
        return record;
    }

    public String getRedcapEventName() {
        return redcapEventName;
    }

    public String getFieldName() {
        return fieldName;
    }

    public String getValue() {
        return value;
    }
}
